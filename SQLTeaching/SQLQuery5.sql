--------------------18/05/2016-------------------------

DROP TABLE ACCOUNTS

CREATE TABLE ACCOUNTS
(
ACNO CHAR(6) NOT NULL PRIMARY KEY,
FIRST_NAME VARCHAR(15) NOT NULL,
aMIDDLE_NAME VARCHAR(15) NULL,
LAST_NAME VARCHAR(15) NOT NULL,
ADDRESS VARCHAR(80) NOT NULL,
CITY VARCHAR(30) NOT NULL,
PIN_CODE CHAR(6),
STATE VARCHAR(25) NOT NULL,
BIRTH_DATE DATETIME NOT NULL,
PHONE_NO VARCHAR(15),
BALANCE MONEY NOT NULL,
OPENING_DATE DATETIME NOT NULL
)

SELECT * FROM ACCOUNTS

INSERT ACCOUNTS(ACNO,FIRST_NAME,MIDDLE_NAME,LAST_NAME,ADDRESS,CITY,PIN_CODE,STATE,BIRTH_DATE,PHONE_NO,BALANCE,OPENING_DATE)
VALUES('A00001','AJAY','KUMAR','SHARMA','33 D SAKET','MEERUT','250001','UTTAR PRADESH','08/22/1980','9837371123',15000.00,'04/15/2015')

INSERT INTO ACCOUNTS(ACNO,FIRST_NAME,MIDDLE_NAME,LAST_NAME,ADDRESS,CITY,PIN_CODE,STATE,BIRTH_DATE,PHONE_NO,BALANCE,OPENING_DATE)
VALUES('A00002','VIJAY','KUMAR','SHARMA','34 D SAKET','MEERUT','250001','UTTAR PRADESH','11/24/1982','9837371155',11000.00,'04/15/2015')

INSERT ACCOUNTS(ACNO,FIRST_NAME,LAST_NAME,ADDRESS,CITY,STATE,BIRTH_DATE,PHONE_NO,BALANCE,OPENING_DATE)
VALUES('A00003','REEMA','SHARMA','67 D SHASHTRI NAGAR','MEERUT','UTTAR PRADESH','12/27/1990','8837371155',16000.00,'04/15/2015')

DROP TABLE NEWACCOUNTS

CREATE TABLE NEWACCOUNTS
(
ACNO CHAR(6) NOT NULL PRIMARY KEY,
FIRST_NAME VARCHAR(15) NOT NULL,
MIDDLE_NAME VARCHAR(15) NULL,
LAST_NAME VARCHAR(15) NOT NULL,
ADDRESS VARCHAR(80) NOT NULL,
CITY VARCHAR(30) NOT NULL,
PIN_CODE CHAR(6),
STATE VARCHAR(25) NOT NULL,
BIRTH_DATE DATETIME NOT NULL,
PHONE_NO VARCHAR(15),
BALANCE MONEY NOT NULL,
OPENING_DATE DATETIME NOT NULL
)

SELECT * FROM NEWACCOUNTS

INSERT NEWACCOUNTS(ACNO,FIRST_NAME,MIDDLE_NAME,LAST_NAME,ADDRESS,CITY,PIN_CODE,STATE,BIRTH_DATE,PHONE_NO,BALANCE,OPENING_DATE)
SELECT * FROM ACCOUNTS

DELETE NEWACCOUNTS

INSERT NEWACCOUNTS(ACNO,FIRST_NAME,MIDDLE_NAME,LAST_NAME,ADDRESS,CITY,PIN_CODE,STATE,BIRTH_DATE,PHONE_NO,BALANCE,OPENING_DATE)
SELECT ACNO,FIRST_NAME,MIDDLE_NAME,LAST_NAME,ADDRESS,CITY,PIN_CODE,STATE,BIRTH_DATE,PHONE_NO,BALANCE,OPENING_DATE
FROM ACCOUNTS
WHERE BALANCE >= 15000

SELECT * FROM NEWACCOUNTS

----------------Pubs------------------------- 
USE PUBS

SELECT * FROM AUTHORS

SELECT * FROM TITLES

SELECT * FROM TITLEAUTHOR

SELECT * FROM SALES

SELECT * FROM DISCOUNTS

SELECT * FROM EMPLOYEE

SELECT * FROM JOBS

SELECT * FROM PUB_INFO

SELECT * FROM PUBLISHERS

SELECT * FROM ROYSCHED

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE
INTO TEMPTABLE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID

SELECT * FROM TEMPTABLE

DELETE TEMPTABLE

INSERT TEMPTABLE
SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID

SELECT * FROM TEMPTABLE

DELETE TEMPTABLE

INSERT TEMPTABLE
SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
WHERE PUBDATE < GETDATE()

SELECT * FROM TEMPTABLE

DELETE TEMPTABLE

INSERT TEMPTABLE
SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
WHERE YTD_SALES > 10000
ORDER BY AUTHORS.AU_ID

SELECT AUTHORS.AU_ID,'TOTAL PRICE'=SUM(PRICE),
'TOTAL ADVANCE'=SUM(ADVANCE),
'TOTAL ROYALTY'=SUM(ROYALTY),
'TOTAL SALES'=SUM(YTD_SALES)
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
GROUP BY AUTHORS.AU_ID
HAVING SUM(YTD_SALES) > 10000

SELECT AUTHORS.AU_ID,'TOTAL PRICE'=SUM(PRICE),
'TOTAL ADVANCE'=SUM(ADVANCE),
'TOTAL ROYALTY'=SUM(ROYALTY),
'TOTAL SALES'=SUM(YTD_SALES)
INTO GROUP_TEPTABLE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
GROUP BY AUTHORS.AU_ID
HAVING SUM(YTD_SALES) > 10000

SELECT * FROM GROUP_TEPTABLE

SELECT AUTHORS.AU_ID,
'TOTAL ADVANCE'=SUM(ADVANCE),
'TOTAL SALES'=SUM(YTD_SALES)
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
GROUP BY AUTHORS.AU_ID
HAVING SUM(YTD_SALES) > 10000

SELECT AU_FNAME,
'TOTAL ADVANCE'=SUM(ADVANCE),
'TOTAL SALES'=SUM(YTD_SALES)
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
GROUP BY AU_FNAME
HAVING SUM(YTD_SALES) > 10000

SELECT * FROM TITLES

SELECT TITLE_ID,TITLE,PRICE
INTO MYTITLES
FROM TITLES

SELECT * FROM MYTITLES

DROP TABLE TEMPTABLE

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE
INTO TEMPTABLE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID

SELECT * FROM TEMPTABLE


SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE
INTO TEMPTABLE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
WHERE PUBDATE < GETDATE()

SELECT * FROM TEMPTABLE

DROP TABLE TEMPTABLE
go

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID AS PubliusherId,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE AS PublishingDate
INTO TEMPTABLE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
go

SELECT * FROM TEMPTABLE

USE PUBS
GO

SELECT * FROM AUTHORS

SELECT AU_ID,AU_FNAME,AU_LNAME,ADDRESS,PHONE
FROM AUTHORS
GO

SELECT 'Authors Id'=AU_ID,'First Name'=AU_FNAME,
'Last Name'=AU_LNAME,ADDRESS,PHONE
FROM AUTHORS
GO

SELECT AU_FNAME,AU_LNAME
FROM AUTHORS
GO

SELECT AU_FNAME+', '+AU_LNAME AS 'Full Name'
FROM AUTHORS
GO

SELECT [AU_ID],[AU_FNAME],AU_LNAME,ADDRESS,PHONE
FROM AUTHORS
GO

SELECT * FROM AUTHORS
WHERE CITY = 'Oakland'

SELECT * FROM AUTHORS
WHERE CITY != 'Oakland'

SELECT * FROM AUTHORS
WHERE contract = 1

SELECT * FROM AUTHORS
WHERE contract <> 1

SELECT * FROM SALES
WHERE qty = 50

SELECT * FROM SALES
WHERE qty <> 50

SELECT * FROM SALES
WHERE qty > 50

SELECT * FROM SALES
WHERE qty >= 50

SELECT * FROM SALES
WHERE qty < 50

SELECT * FROM SALES
WHERE qty <= 50

SELECT * FROM AUTHORS
WHERE state = 'CA'

SELECT * FROM AUTHORS
WHERE city = 'Oakland' AND contract = 1

SELECT * FROM AUTHORS
WHERE city = 'Oakland' AND contract <> 1

SELECT * FROM AUTHORS
WHERE city = 'Oakland' OR contract = 1

SELECT * FROM AUTHORS
WHERE city = 'Oakland' OR STATE = 'IN'

SELECT * FROM AUTHORS
WHERE city = 'Oakland' AND STATE = 'IN'

SELECT TOP 5 * FROM AUTHORS

SELECT * FROM AUTHORS
WHERE AU_LNAME = 'Green' AND STATE = 'CA'

SELECT * FROM AUTHORS
WHERE NOT AU_LNAME = 'Green' AND STATE = 'CA'

SELECT * FROM AUTHORS
WHERE city = 'Oakland' OR NOT STATE = 'CA'

SELECT * FROM AUTHORS
WHERE city = 'Oakland' AND NOT STATE = 'CA'

------------20/05/2016--------

SELECT TOP 10 AU_FNAME+', '+AU_LNAME AS 'Full Name'
FROM AUTHORS
GO

SELECT TOP 10 PERCENT AU_FNAME+', '+AU_LNAME AS 'Full Name'
FROM AUTHORS
GO

SELECT TOP 10 AU_FNAME+', '+AU_LNAME AS 'Full Name'
FROM AUTHORS
WHERE CITY = 'Oakland'
GO

SELECT TOP 10 AU_FNAME+', '+AU_LNAME AS 'Full Name'
FROM AUTHORS
WHERE STATE = 'CA'
GO

SELECT *
FROM AUTHORS
WHERE STATE = 'CA'

SELECT * FROM AUTHORS
ORDER BY AU_LNAME

SELECT * FROM AUTHORS
ORDER BY AU_LNAME ASC

SELECT * FROM AUTHORS
ORDER BY AU_LNAME DESC

SELECT * FROM SALES
ORDER BY QTY ASC

SELECT * FROM SALES
ORDER BY QTY DESC

SELECT * FROM AUTHORS
WHERE CONTRACT = 1
ORDER BY AU_LNAME ASC

SELECT * FROM AUTHORS
WHERE CONTRACT = 1
ORDER BY AU_LNAME DESC

SELECT * FROM AUTHORS
WHERE CITY = 'Oakland'
ORDER BY AU_FNAME ASC

SELECT AU_FNAME,AU_LNAME,CITY FROM AUTHORS
WHERE CITY = 'Oakland'
ORDER BY AU_FNAME ASC

SELECT AU_FNAME,AU_LNAME,CITY FROM AUTHORS
WHERE CITY != 'Oakland'
ORDER BY AU_FNAME ASC

SELECT * FROM AUTHORS
ORDER BY AU_LNAME,AU_FNAME ASC

SELECT AU_FNAME,CITY FROM AUTHORS
ORDER BY AU_FNAME ASC

SELECT CITY,AU_FNAME FROM AUTHORS
ORDER BY CITY,AU_FNAME ASC

SELECT * FROM titles

SELECT COUNT(*) FROM titles

SELECT COUNT(TITLE_ID) FROM titles

SELECT COUNT(YTD_SALES) FROM titles

SELECT COUNT(DISTINCT YTD_SALES) FROM titles

SELECT COUNT(ALL YTD_SALES) FROM titles

SELECT COUNT(TYPE) FROM titles

SELECT COUNT(DISTINCT TYPE) FROM titles

SELECT COUNT(ALL TYPE) FROM titles

SELECT SUM(YTD_SALES) FROM titles

SELECT SUM(ALL YTD_SALES) FROM titles

SELECT SUM(DISTINCT YTD_SALES) FROM titles

SELECT AVG(YTD_SALES) FROM titles

SELECT AVG(DISTINCT YTD_SALES) FROM titles

SELECT MAX(YTD_SALES) FROM titles

SELECT MAX(DISTINCT YTD_SALES) FROM titles

SELECT MIN(YTD_SALES) FROM titles

SELECT MIN(DISTINCT YTD_SALES) FROM titles

SELECT COUNT(*) FROM AUTHORS
WHERE CITY = 'OAKLAND'

SELECT COUNT(*) FROM AUTHORS
WHERE CITY != 'OAKLAND'

SELECT COUNT(YTD_SALES) FROM titles
WHERE YTD_SALES > 1000

SELECT * FROM SALES

SELECT COUNT(ORD_NUM) FROM SALES
WHERE QTY > 30

SELECT COUNT(ORD_NUM) FROM SALES
WHERE QTY < 30

SELECT COUNT(ORD_NUM),SUM(QTY) FROM SALES
WHERE QTY > 30

SELECT * FROM SALES

SELECT STOR_ID,SUM(QTY)
FROM SALES
GROUP BY STOR_ID

SELECT STOR_ID,COUNT(QTY),SUM(QTY)
FROM SALES
GROUP BY STOR_ID

SELECT STOR_ID,COUNT(QTY),SUM(QTY)
FROM SALES
WHERE QTY < 30
GROUP BY STOR_ID

SELECT ORD_NUM,COUNT(QTY),SUM(QTY)
FROM SALES
WHERE QTY < 30
GROUP BY ORD_NUM

SELECT * FROM SALES

SELECT TITLE_ID,COUNT(QTY),SUM(QTY)
FROM SALES 
GROUP BY TITLE_ID
HAVING SUM(QTY) > 30

SELECT TITLE_ID
FROM SALES 
GROUP BY TITLE_ID
HAVING SUM(QTY) > 30

SELECT COUNT(TITLE_ID)
FROM SALES 
HAVING SUM(QTY) > 50

SELECT 'NO OF ORDERS'=COUNT(ORD_NUM),
'TOTAL QUANTITY'=SUM(QTY) FROM SALES
WHERE QTY > 30

------------------23/05/2016------------------
SELECT * FROM TITLES

SELECT * FROM AUTHORS 

SELECT * FROM TITLEAUTHOR

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,
AU_ORD,ROYALTYPER
FROM AUTHORS INNER 
JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID

SELECT *
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID

SELECT *
FROM AUTHORS LEFT OUTER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID

SELECT *
FROM AUTHORS RIGHT OUTER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID

SELECT * FROM EMPLOYEE

SELECT * FROM JOBS

SELECT * FROM 
EMPLOYEE INNER JOIN JOBS
ON JOBS.JOB_ID = EMPLOYEE.JOB_ID

SELECT EMP_ID, FNAME,LNAME,JOBS.JOB_ID,JOB_DESC
FROM EMPLOYEE INNER JOIN JOBS
ON JOBS.JOB_ID = EMPLOYEE.JOB_ID

SELECT * FROM 
EMPLOYEE LEFT OUTER JOIN JOBS
ON JOBS.JOB_ID = EMPLOYEE.JOB_ID

SELECT * FROM 
EMPLOYEE RIGHT OUTER JOIN JOBS
ON JOBS.JOB_ID = EMPLOYEE.JOB_ID

SELECT DISTINCT AUTHORS.AU_ID,AU_LNAME,AU_FNAME
FROM AUTHORS JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID

SELECT PUBS..AUTHORS.AU_ID,AU_LNAME,AU_FNAME
FROM PUBS..AUTHORS JOIN PUBS..TITLEAUTHOR
ON PUBS..AUTHORS.AU_ID = PUBS..TITLEAUTHOR.AU_ID

SELECT * FROM TITLEAUTHOR
WHERE AU_ID = '409-56-7008'

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
go

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID ,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE 
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
go

SELECT *
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
go

SELECT *
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
ORDER BY AU_LNAME
go

SELECT AUTHORS.AU_ID,'TOTAL ROYALITY'=SUM(ROYALTY),
'TOTAL SALES'=SUM(YTD_SALES) 
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
GROUP BY AUTHORS.AU_ID
go

SELECT AU_FNAME,AU_LNAME
FROM AUTHORS
GO

SELECT AU_FNAME+AU_LNAME
FROM AUTHORS
GO

SELECT AU_FNAME+', '+AU_LNAME 
FROM AUTHORS
GO

SELECT AU_FNAME+', '+AU_LNAME AS 'Full Name'
FROM AUTHORS
GO

select qty * price 
from sales inner join titles
on sales.title_id = titles.title_id

select * from titles

select * from sales

select title,type,qty,price,qty * price as 'Total Sales'
from sales inner join titles
on sales.title_id = titles.title_id
WHERE TYPE = 'PSYCHOLOGY'

SELECT * , 'July' As Month_Name 
FROM TITLES

SELECT * FROM AUTHORS

UPDATE AUTHORS
SET AU_LNAME = 'SHARMA'
WHERE AU_ID = '238-95-7766'

UPDATE AUTHORS
SET AU_LNAME = 'SINGH',AU_FNAME='ANIKA', 
ADDRESS='23 TUBEWELL COLONY',CITY='MEERUT',
STATE='UP',ZIP='25002'
WHERE AU_ID = '238-95-7766'

SELECT * FROM TITLES

UPDATE TITLES
SET PRICE=200.00,
PUBDATE='05/23/2016'
WHERE TITLE_ID='BU7832'

UPDATE AUTHORS
SET CONTRACT=1
WHERE AU_ID = '341-22-1782'

SELECT * FROM AUTHORS
WHERE AU_ID = '341-22-1782'

UPDATE AUTHORS
SET CONTRACT=1,PHONE=' '
WHERE AU_ID = '341-22-1782'

SELECT DATEPART(YY,GETDATE())

select * from titles

SELECT TITLE,DATEPART(YY,PUBDATE)
FROM TITLES

select * from titles
WHERE DATEPART(YY,PUBDATE)=2004

UPDATE TITLES
SET PRICE=500.00
WHERE DATEPART(YY,PUBDATE)=2004

-----------------24/05/2016----------------
select * from AUTHORS
WHERE ZIP = '25002'

UPDATE AUTHORS
SET CONTRACT=0
WHERE ZIP = '25002'

select * from AUTHORS
WHERE STATE = 'CA'

UPDATE AUTHORS
SET CONTRACT=1
WHERE STATE = 'CA'

UPDATE AUTHORS
SET CONTRACT=0
WHERE STATE = 'CA' AND ZIP = '94609'

UPDATE AUTHORS
SET CONTRACT=1
WHERE ZIP <> '94609'

SELECT * FROM AUTHORS
WHERE ZIP LIKE '94%'

UPDATE AUTHORS
SET CONTRACT=0
WHERE ZIP LIKE '94%'

SELECT * FROM AUTHORS
WHERE AU_LNAME LIKE 'S%'

UPDATE AUTHORS
SET CITY='London'
WHERE AU_LNAME LIKE 'S%'

UPDATE AUTHORS
SET CONTRACT=0
WHERE ZIP NOT LIKE '94%'

SELECT * FROM AUTHORS
WHERE ZIP NOT LIKE '94%'

SELECT * FROM authors
WHERE phone LIKE '415%'

SELECT * FROM authors
WHERE ZIP LIKE '[928]4025'

SELECT * FROM authors
WHERE ZIP LIKE '[928]%'

SELECT * FROM authors
WHERE ZIP LIKE '[^328]0205'

SELECT * FROM authors
WHERE ZIP LIKE '[^328]%'

SELECT * FROM authors
WHERE ZIP LIKE '9460_'

SELECT * FROM authors
WHERE ZIP LIKE '__609'

SELECT * FROM authors
WHERE ZIP LIKE '%9'

UPDATE authors
SET contract = 1
WHERE phone LIKE '415%' 

UPDATE authors
SET contract = 1
WHERE ZIP LIKE '[928]4025'

UPDATE authors
SET contract = 1
WHERE ZIP LIKE '[^328]0205'

UPDATE authors
SET contract = 1
WHERE ZIP LIKE '9460_'

SELECT * FROM titles 
WHERE title_id IN('BU1032','PC8888','MC2222')

SELECT * FROM titles 
WHERE ytd_sales IN(2032,4095,375)

SELECT * FROM titles 
WHERE title_id NOT IN('BU1032','PC8888','MC2222')

SELECT * FROM titles 
WHERE ytd_sales NOT IN(2032,4095,375)

SELECT * FROM authors
WHERE ZIP IN('95128','66044','48105')

UPDATE AUTHORS
SET CONTRACT=1
WHERE ZIP IN('95128','66044','48105')

SELECT * FROM authors
WHERE CITY IN('Oakland','Covelo','Nashville')

UPDATE AUTHORS
SET CONTRACT=1
WHERE CITY IN('Oakland','Covelo','Nashville')

SELECT * FROM authors
WHERE CITY NOT IN('Oakland','Covelo','Nashville')

UPDATE AUTHORS
SET CONTRACT=1
WHERE CITY NOT IN('Oakland','Covelo','Nashville')

SELECT * FROM 

WHERE ZIP LIKE '%60%'

SELECT * FROM authors
WHERE ZIP LIKE '%60!%' ESCAPE '!'

SELECT * FROM TITLES

SELECT type,'Toal Adavance'=SUM(advance)
FROM TITLES
GROUP BY type

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type
HAVING SUM(advance) > 15000

SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 400
GROUP BY type

SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 400
GROUP BY type
HAVING SUM(advance) > 15000
ORDER BY type

SELECT * FROM SALES

SELECT TITLE_ID,SUM(QTY)
FROM SALES
GROUP BY TITLE_ID
HAVING SUM(QTY) > 30

SELECT TITLE_ID
FROM SALES
GROUP BY TITLE_ID
HAVING SUM(QTY) > 30

SELECT * FROM SALES

SELECT * FROM SALES 
WHERE TITLE_ID IN(SELECT TITLE_ID 
FROM SALES
GROUP BY TITLE_ID
HAVING SUM(QTY) > 30)

SELECT * FROM TITLES 
WHERE TITLE_ID IN(SELECT TITLE_ID 
FROM SALES
GROUP BY TITLE_ID
HAVING SUM(QTY) > 30)

UPDATE SALES
SET PAYTERMS = 'Cash Only'
FROM (SELECT TITLE_ID 
FROM SALES
GROUP BY TITLE_ID
HAVING SUM(QTY) > 30) AS MySelect 
WHERE SALES.TITLE_ID = MySelect.TITLE_ID

SELECT * FROM SALES

SELECT * FROM TITLES


UPDATE TITLES SET YTD_SALES = 0

UPDATE TITLES
SET YTD_SALES=TITLES.YTD_SALES+	SALES.QTY
FROM TITLES,SALES
WHERE TITLES.TITLE_ID=SALES.TITLE_ID
AND DATEPART(YY,SALES.ORD_DATE)=1994

SELECT DATEPART(dd,GETDATE())

SELECT DATEPART(mm,GETDATE())

SELECT DATEPART(yy,GETDATE())

SELECT DATEPART(yyyy,GETDATE())

SELECT DATEPART(qq,GETDATE())

SELECT DATEPART(dy,GETDATE()) 

SELECT DATEPART(wk,GETDATE())

SELECT DATEPART(hh,GETDATE())

SELECT DATEPART(mi,GETDATE())

SELECT DATEPART(ss,GETDATE())

SELECT DATEPART(ms,GETDATE())

SELECT DATEPART(dw,GETDATE())

--------------25/05/2016-----------------
SELECT DATEPART(YY,PUBDATE)
FROM TITLES 

SELECT * FROM AUTHORS

SELECT * FROM TITLES

SELECT * FROM TITLEAUTHOR

UPDATE AUTHORS
SET CONTRACT=1
FROM (SELECT AUTHORS.AU_ID,TITLEAUTHOR.TITLE_ID
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID=TITLEAUTHOR.AU_ID) AS MySelect
WHERE MySelect.AU_ID=AUTHORS.AU_ID 
AND MySelect.TITLE_ID IN('BU1111','PC9999')

DROP TABLE MYTITLES

SELECT * 
INTO MYTITLES
FROM TITLES

SELECT * FROM MYTITLES

DELETE MYTITLES

TRUNCATE TABLE MYTITLES

DELETE MYTITLES
WHERE TITLE_ID='BU1111'

DELETE MYTITLES
WHERE TYPE='TRAD_COOK'

DELETE MYTITLES
WHERE PRICE<10

SELECT * FROM MYTITLES
WHERE DATEPART(YY,PUBDATE)<=1991

DELETE MYTITLES
WHERE DATEPART(YY,PUBDATE)<=1991

SELECT * FROM TITLEAUTHOR
WHERE AU_ID IN(SELECT AU_ID FROM AUTHORS
WHERE AU_LNAME = 'Ringer')

DELETE TITLEAUTHOR
WHERE AU_ID IN(SELECT AU_ID FROM AUTHORS
WHERE AU_LNAME = 'Ringer')

SELECT * FROM AUTHORS
WHERE AU_LNAME = 'Ringer'

DELETE AUTHORS
WHERE AU_LNAME = 'Ringer'

SELECT * FROM AUTHORS

SELECT * FROM TITLEAUTHOR

DROP TABLE ACCOUNTS

CREATE TABLE ACCOUNTS
(
ACNO CHAR(6) NOT NULL PRIMARY KEY,
FIRST_NAME VARCHAR(15) NOT NULL,
LAST_NAME VARCHAR(15) NOT NULL,
ADDRESS VARCHAR(80) NOT NULL,
CITY VARCHAR(30) NOT NULL,
PIN_CODE CHAR(6),
STATE VARCHAR(25) NOT NULL,
GENDER CHAR(6),
BIRTH_DATE DATETIME NOT NULL,
PHONE_NO VARCHAR(15),
BALANCE MONEY NOT NULL,
OPENING_DATE DATETIME NOT NULL,
ONLINE_BANKING BIT,
DEBIT_CARD BIT
)

DROP TABLE ACCOUNTS

SELECT * FROM ACCOUNTS

INSERT ACCOUNTS(ACNO,FIRST_NAME,LAST_NAME,ADDRESS,CITY,PIN_CODE,STATE,BIRTH_DATE,PHONE_NO,BALANCE,OPENING_DATE)
VALUES('A00001','AJAY','SHARMA','33 D SAKET','MEERUT','250001','UTTAR PRADESH','08/22/1980','9837371123',15000.00,'04/15/2015')

INSERT ACCOUNTS(ACNO,FIRST_NAME,LAST_NAME,ADDRESS,CITY,PIN_CODE,STATE,BIRTH_DATE,PHONE_NO,BALANCE,OPENING_DATE)
VALUES('A00002','VIJAY','SHARMA','34 D SAKET','MEERUT','250001','UTTAR PRADESH','11/24/1982','9837371155',11000.00,'04/15/2015')

INSERT ACCOUNTS(ACNO,FIRST_NAME,LAST_NAME,ADDRESS,CITY,STATE,BIRTH_DATE,PHONE_NO,BALANCE,OPENING_DATE)
VALUES('A00003','REEMA','SHARMA','67 D SHASHTRI NAGAR','MEERUT','UTTAR PRADESH','12/27/1990','8837371155',16000.00,'04/15/2015')


SELECT * FROM ACCOUNTS

DROP TABLE TRANSACTIONS

CREATE TABLE TRANSACTIONS
(
TRAN_ID CHAR(8) NOT NULL PRIMARY KEY,
ACNO CHAR(6) NOT NULL FOREIGN KEY REFERENCES ACCOUNTS(ACNO),
AMOUNT MONEY NOT NULL,
TRAN_DATE DATETIME NOT NULL,
TRAN_TYPE VARCHAR(15) NOT NULL
)

SELECT * FROM ACCOUNTS

SELECT * FROM TRANSACTIONS

INSERT TRANSACTIONS(TRAN_ID,ACNO,AMOUNT,TRAN_DATE,TRAN_TYPE)
VALUES('T0000001','A00001',52000.00,'04/16/2015','DEPOSIT')

INSERT TRANSACTIONS(TRAN_ID,ACNO,AMOUNT,TRAN_DATE,TRAN_TYPE)
VALUES('T0000009','A00002',15000.00,'04/16/2015','DEPOSIT')

INSERT TRANSACTIONS(TRAN_ID,ACNO,AMOUNT,TRAN_DATE,TRAN_TYPE)
VALUES('T0000010','A00009',7000.00,'04/16/2015','DEPOSIT')

DROP TRIGGER TRANSACTION_INSERT_TRIGGER

CREATE TRIGGER TRANSACTION_INSERT_TRIGGER
ON TRANSACTIONS
FOR INSERT
AS
BEGIN
DECLARE @ACNO CHAR(7)
DECLARE @AMOUNT MONEY
DECLARE @TRAN_TYPE VARCHAR(15)
DECLARE @BALANCE MONEY
SELECT @ACNO = ACNO FROM INSERTED
SELECT @AMOUNT = AMOUNT FROM INSERTED
SELECT @TRAN_TYPE = TRAN_TYPE FROM INSERTED
IF @TRAN_TYPE = 'DEPOSIT'
BEGIN
	UPDATE ACCOUNTS
	SET BALANCE = BALANCE + @AMOUNT
	WHERE ACNO = @ACNO	
END
ELSE IF @TRAN_TYPE = 'WITHDRAWL'
BEGIN
	SELECT @BALANCE = BALANCE
	FROM ACCOUNTS
	WHERE ACNO = @ACNO
	IF @AMOUNT > @BALANCE
	BEGIN
		PRINT 'INSUFFICIENT BALANCE, TRANSACTION IS NOT POSSIBLE'
		ROLLBACK TRANSACTION
	END
	ELSE
	BEGIN	 
		UPDATE ACCOUNTS
		SET BALANCE = BALANCE - @AMOUNT
		WHERE ACNO = @ACNO
		PRINT 'TRANSACTION HAS BEEN DONE'	
	END
END
ELSE 
BEGIN
	ROLLBACK TRANSACTION
	PRINT 'INVALID TRANSACTION TYPE'	
END
END

SELECT * FROM ACCOUNTS

SELECT * FROM TRANSACTIONS
----------------26/05/2016-----------------------

DROP TRIGGER DEL_TRIG_ACOOUNTS

CREATE TRIGGER DEL_TRIG_ACOOUNTS
ON ACCOUNTS
FOR DELETE
AS
BEGIN
DECLARE @ACNO CHAR(7)
SELECT @ACNO= ACNO FROM DELETED
DELETE TRANSACTIONS
WHERE TRANSACTIONS.ACNO=@ACNO
PRINT @ACNO
PRINT 'RECORD HAS BEEN DELETED FROM ACOOUNTS AND TRANSACTIONS'
END

DELETE ACCOUNTS
WHERE ACNO = 'A00002'

SELECT * FROM ACCOUNTS
WHERE ACNO = 'A00002'

SELECT * FROM TRANSACTIONS
WHERE ACNO = 'A00002'

DROP TRIGGER UPDATE_TRIG_ACCOUNTS


------------------------------------------
CREATE TRIGGER UPDATE_TRIG_ACCOUNTS
ON ACCOUNTS
FOR UPDATE
AS
BEGIN
DECLARE @BALANCE MONEY
DECLARE @OLD_BALANCE MONEY
SELECT @BALANCE = BALANCE FROM INSERTED
SELECT @OLD_BALANCE = BALANCE FROM DELETED
IF @BALANCE < 500
BEGIN 
PRINT 'OLD BALANCE IS '
PRINT @OLD_BALANCE
PRINT 'BALANCE CAN NOT LESS THAN 500'
PRINT 'NEW BALANCE IS '
PRINT @BALANCE
ROLLBACK TRANSACTION
END
ELSE
BEGIN
PRINT 'OLD BALANCE IS '
PRINT @OLD_BALANCE
PRINT 'NEW BALANCE IS '
PRINT @BALANCE
PRINT 'BALANCE UPDATED SUCCESS FULLY'
END
END

SELECT * FROM ACCOUNTS
WHERE ACNO = 'A00002'

UPDATE ACCOUNTS
SET BALANCE = 400
WHERE ACNO = 'A00002'

UPDATE ACCOUNTS
SET BALANCE = 28000
WHERE ACNO = 'A00002'

SELECT * FROM SALES

SELECT * FROM TITLEAUTHOR

SELECT TITLE_ID FROM SALES
GROUP BY TITLE_ID
HAVING SUM(QTY) > 40

DELETE TITLEAUTHOR
WHERE TITLE_ID IN(SELECT TITLE_ID FROM SALES
GROUP BY TITLE_ID
HAVING SUM(QTY) > 30)

SELECT * FROM TITLES
WHERE TITLE LIKE '%Computers%' 

SELECT * FROM TITLEAUTHOR

DELETE TITLEAUTHOR
FROM TITLEAUTHOR INNER JOIN TITLES
ON TITLEAUTHOR.TITLE_ID=TITLES.TITLE_ID
WHERE TITLES.TITLE LIKE '%Com puters%'

BEGIN TRANSACTION
SELECT * FROM TITLES
SELECT * FROM TITLEAUTHOR
COMMIT TRANSACTION

SELECT * FROM ACCOUNTS

BEGIN TRANSACTION
DELETE ACCOUNTS
COMMIT TRANSACTION

BEGIN TRANSACTION TRAN1
SELECT * FROM TITLES
SELECT * FROM TITLEAUTHOR
COMMIT TRANSACTION  TRAN1

BEGIN TRAN T1
SELECT * FROM ACCOUNTS
BEGIN TRAN M2
SELECT * FROM TRANSACTIONS
COMMIT TRAN M2
COMMIT TRAN T1

SELECT COUNT(*) FROM HumanResources.JobCandidate

SELECT * FROM AdventureWorks.HumanResources.JobCandidate


BEGIN TRANSACTION CandidateDelete
USE AdventureWorks;
IF(SELECT COUNT(*) FROM AdventureWorks.HumanResources.JobCandidate)>=11
BEGIN
	DELETE FROM AdventureWorks.HumanResources.JobCandidate
    WHERE JobCandidateID = 3;
    PRINT 'RECORDS HAS BEEN DELETED'
    COMMIT TRANSACTION CandidateDelete
END
ELSE
BEGIN
	ROLLBACK TRANSACTION CandidateDelete
    PRINT 'RECORDS HAS NOT BEEN DELETED'
END
GO

SELECT * FROM AUTHORS
WHERE CITY = 'Oakland'

SELECT * FROM AUTHORS
WHERE CITY != 'Oakland'

SELECT * FROM AUTHORS
WHERE contract = 1

SELECT * FROM AUTHORS
WHERE contract <> 1

SELECT * FROM SALES
WHERE qty = 50

SELECT * FROM SALES
WHERE qty <> 50

SELECT * FROM SALES
WHERE qty > 50

SELECT * FROM SALES
WHERE qty >= 50

SELECT * FROM SALES
WHERE qty < 50

SELECT * FROM SALES
WHERE qty <= 50

SELECT * FROM AUTHORS
WHERE state = 'CA'

SELECT ASCII('C')

SELECT ASCII('c')

SELECT ASCII('>')

SELECT * FROM AUTHORS
WHERE city = 'Oakland' AND contract = 1

SELECT * FROM AUTHORS
WHERE city = 'Oakland' OR contract = 1

SELECT * FROM AUTHORS
WHERE city = 'Oakland' AND contract <> 1

SELECT * FROM AUTHORS
WHERE city = 'Oakland' OR STATE = 'IN'

SELECT * FROM AUTHORS
WHERE city = 'Oakland' AND STATE = 'IN'

SELECT * FROM AUTHORS
WHERE city = 'Oakland'

SELECT * FROM AUTHORS
WHERE NOT city = 'Oakland'

------------27/05/2016--------------

SELECT * FROM PUBLISHERS
WHERE EXISTS (SELECT * FROM AUTHORS
WHERE state = 'CA' AND contract = 1)

SELECT * FROM PUBLISHERS
WHERE EXISTS (SELECT * FROM AUTHORS
WHERE state = 'UT' AND contract = 1)

SELECT * FROM PUBLISHERS
WHERE NOT EXISTS (SELECT * FROM AUTHORS
WHERE state = 'UT' AND contract = 1)

SELECT * FROM PUBLISHERS
WHERE NOT EXISTS (SELECT * FROM AUTHORS
WHERE state = 'CA' AND contract = 0)

SELECT * FROM titles 
INNER JOIN TITLEAUTHOR
ON titles.title_id = TITLEAUTHOR.title_id
INNER JOIN AUTHORS 
ON  TITLEAUTHOR.au_id = AUTHORS.au_id

SELECT * FROM AUTHORS
WHERE EXISTS (SELECT * FROM titles INNER JOIN TITLEAUTHOR
ON titles.title_id = TITLEAUTHOR.title_id
INNER JOIN AUTHORS 
ON TITLEAUTHOR.au_id = AUTHORS.au_id)

SELECT * FROM AUTHORS
WHERE NOT EXISTS (SELECT * FROM titles INNER JOIN TITLEAUTHOR
ON titles.title_id = TITLEAUTHOR.title_id
INNER JOIN AUTHORS 
ON TITLEAUTHOR.au_id = AUTHORS.au_id)

SELECT * FROM AUTHORS 
INNER JOIN TITLEAUTHOR
ON AUTHORS.a
u_id = TITLEAUTHOR.au_id
INNER JOIN TITLES 
ON titles.title_id = TITLEAUTHOR.title_id

SELECT * FROM AUTHORS
WHERE EXISTS (SELECT * FROM titles)

SELECT * FROM AUTHORS
WHERE NOT EXISTS (SELECT * FROM titles)

SELECT * FROM AUTHORS
WHERE  EXISTS 
(SELECT * FROM titles INNER JOIN TITLEAUTHOR
ON titles.title_id = TITLEAUTHOR.title_id)

SELECT * FROM AUTHORS
WHERE  NOT  EXISTS 
(SELECT * FROM titles INNER JOIN TITLEAUTHOR
ON titles.title_id = TITLEAUTHOR.title_id)

SELECT * FROM AUTHORS
SELECT * FROM titles
SELECT * FROM TITLEAUTHOR

SELECT * FROM titles 
WHERE ytd_sales BETWEEN 20 AND 7000

SELECT * FROM titles 
WHERE ytd_sales NOT BETWEEN 20 AND 7000

SELECT * FROM titles 
WHERE PRICE BETWEEN 10 AND 20

SELECT * FROM titles 
WHERE PRICE NOT BETWEEN 10 AND 20

SELECT title,ytd_sales FROM titles 
WHERE ytd_sales BETWEEN 20 AND 7000

SELECT title,ytd_sales FROM titles 
WHERE ytd_sales NOT BETWEEN 20 AND 7000

SELECT title,ytd_sales FROM titles 
WHERE ytd_sales > 7000

SELECT * FROM TITLES
WHERE TYPE IN('psychology','trad_cook')

SELECT * FROM TITLES
WHERE PRICE IN(200,500,700)


SELECT AU_LNAME,AU_FNAME
FROM AUTHORS
WHERE AU_ID IN(SELECT AU_ID FROM TITLEAUTHOR
WHERE ROYALTYPER=100)

SELECT AU_LNAME,AU_FNAME
FROM AUTHORS
WHERE AU_ID NOT IN(SELECT AU_ID FROM TITLEAUTHOR
WHERE ROYALTYPER=100)

SELECT * FROM PUBLISHERS

SELECT AU_LNAME,CITY FROM authors
WHERE city IN(SELECT city FROM PUBLISHERS)

SELECT AU_LNAME,CITY FROM authors
WHERE city NOT IN(SELECT city FROM PUBLISHERS)

SELECT AU_LNAME,CITY FROM authors
WHERE city <> ALL(SELECT city FROM PUBLISHERS)

SELECT AU_LNAME,CITY FROM authors
WHERE city = ALL(SELECT city FROM PUBLISHERS)

SELECT AU_LNAME,CITY FROM authors
WHERE city <> ANY(SELECT city FROM PUBLISHERS)

SELECT AU_LNAME,CITY FROM authors
WHERE city = ANY(SELECT city FROM PUBLISHERS)

SELECT * FROM authors
WHERE phone LIKE '415%'

SELECT * FROM authors
WHERE ZIP LIKE '[928]4025'

SELECT * FROM authors
WHERE ZIP LIKE '[^928]4025'

SELECT * FROM authors
WHERE ZIP LIKE '9460_'

SELECT * FROM authors
WHERE AU_LNAME LIKE 'G%'

SELECT * FROM authors
WHERE AU_LNAME LIKE '%E'

UPDATE authors
SET contract = 1
WHERE phone LIKE '415%' 

UPDATE authors
SET contract = 1
WHERE ZIP LIKE '[928]4025'

UPDATE authors
SET contract = 1
WHERE ZIP LIKE '[^328]0205'

UPDATE authors
SET contract = 1
WHERE ZIP LIKE '9460_'

SELECT * FROM authors
WHERE phone LIKE '+91(121)-[0-9][0-9][0-9][0-9][0-9][0-9]'

SELECT * FROM titles
WHERE ROYALTY IS NULL

SELECT * FROM titles
WHERE ROYALTY IS NOT NULL 

SELECT ISNULL(ROYALTY,$0.00) FROM titles

SELECT PRICE FROM titles
WHERE price IS NULL

SELECT ROYALTY FROM titles
WHERE ROYALTY IS NULL

SELECT ROYALTY FROM titles
WHERE ROYALTY IS NOT NULL

SELECT PRICE FROM titles
WHERE price IS NOT NULL

SELECT * FROM titles 
WHERE title_id IN('BU1032','PC8888','MC2222')

SELECT * FROM titles 
WHERE ytd_sales IN(2032,4095,375)

SELECT * FROM titles 
WHERE title_id NOT IN('BU1032','PC8888','MC2222')

SELECT * FROM titles 
WHERE ytd_sales NOT IN(2032,4095,375)

SELECT * FROM authors
WHERE phone LIKE '415%'

SELECT * FROM authors
WHERE phone LIKE '%15%'

SELECT * FROM authors
WHERE phone LIKE '_08%'

SELECT * FROM authors
WHERE phone LIKE '7_%_%'

SELECT * FROM authors
WHERE phone LIKE '_1%3'

SELECT * FROM authors
WHERE zip LIKE '2___3'

SELECT * FROM authors
WHERE phone NOT LIKE '%15%'

SELECT * FROM authors
WHERE phone NOT LIKE '_08%'

SELECT * FROM authors
WHERE phone NOT LIKE '7_%_%'

SELECT * FROM authors
WHERE phone NOT LIKE '_1%3'

SELECT * FROM authors
WHERE zip NOT LIKE '2___3'

SELECT * FROM titles
WHERE EXISTS (SELECT * FROM titles WHERE price < 100)

SELECT * FROM titles
WHERE EXISTS (SELECT * FROM titles WHERE price > 1000)

SELECT * FROM titles
WHERE NOT EXISTS (SELECT * FROM titles WHERE price > 1000)

SELECT TYPE FROM TITLES

SELECT DISTINCT TYPE FROM TITLES

SELECT ALL TYPE FROM titles

SELECT * FROM titles
WHERE price > ALL 
(SELECT PRICE FROM titles WHERE price < 10)

SELECT * FROM titles
WHERE price > ANY 
(SELECT PRICE FROM titles WHERE price < 10)

SELECT * FROM titles
WHERE title_id = 'BU1111' OR title_id = 'MC2222' OR 
title_id = 'PC1035'

----------------28/05/2016----------------
SELECT * FROM SALES

SELECT MAX(QTY) FROM SALES 
WHERE EXISTS (SELECT * FROM titles WHERE price < 100)

SELECT MAX(QTY) FROM SALES 
WHERE EXISTS (SELECT * FROM titles WHERE price > 15000)


SELECT * FROM titles
WHERE ytd_sales IS NULL

SELECT * FROM titles
WHERE ytd_sales IS NOT  NULL

SELECT PRICE FROM titles

SELECT TYPE FROM titles

SELECT DISTINCT TYPE FROM titles

SELECT DISTINCT PRICE FROM titles

SELECT 50 + 20

SELECT 50 - 20

SELECT 50 * 20

SELECT 50 / 20

SELECT 50 % 20

SELECT 75*20/2-15+7

--BODMAS

SELECT 75*20/(2-15)+7

SELECT * FROM titles

SELECT price + YTD_SALES 
FROM titles

SELECT price + YTD_SALES AS 'TOTAL AMOUNT' 
FROM titles

SELECT price,YTD_SALES,price*YTD_SALES AS 'SALES VALUE' 
FROM titles

SELECT * FROM titles
WHERE price + YTD_SALES > 50

SELECT * FROM titles
WHERE (price + YTD_SALES) < 50

SELECT price FROM titles
WHERE price + YTD_SALES > 50

SELECT  price-YTD_SALES AS 'DIFFERENCE AMOUNT' 
FROM titles

SELECT price,YTD_SALES,price-YTD_SALES AS 'DIFFERENCE AMOUNT' 
FROM titles

SELECT price FROM titles
WHERE YTD_SALES - price > 5000

SELECT price FROM titles
WHERE YTD_SALES - price < 5000

SELECT price,price + 5 AS 'NEW PRICE' 
FROM titles

SELECT price,price*5/100 AS 'PERCENTAGE',
PRICE+(price*5/100) AS 'NEW PRICE' 
FROM titles

SELECT price,price*10 
FROM titles
WHERE price * 10 > 50

SELECT  price / 10 AS 'QUOTIENT AMOUNT' 
FROM titles

SELECT price,price / 10 FROM titles
WHERE price / 10 < 50

SELECT  price * 10 +1000 AS 'AMOUNT' 
FROM titles

SELECT  (price * 10) +1000 AS 'AMOUNT' 
FROM titles
WHERE price > 20

SELECT  YTD_SALES / 52 + price
FROM titles

SELECT  YTD_SALES - 1000 + price / 52
FROM titles

SELECT (YTD_SALES - 1000 + price) / 52
FROM titles

SELECT YTD_SALES
FROM titles
WHERE YTD_SALES < PRICE * 3  + 10 / 2 - 50

SELECT YTD_SALES,PRICE * 3  + 10 / 2 - 50
FROM titles
WHERE YTD_SALES > PRICE * 3  + 10 / 2 - 50

SELECT * FROM titles

SELECT COUNT(*) FROM titles

SELECT COUNT(TITLE_ID) FROM titles

SELECT COUNT(YTD_SALES) FROM titles

SELECT COUNT(DISTINCT YTD_SALES) FROM titles

SELECT COUNT(TYPE) FROM titles

SELECT COUNT(DISTINCT TYPE) FROM titles

SELECT COUNT(ALL YTD_SALES) FROM titles

SELECT COUNT(*) FROM titles
WHERE TYPE='Psychology'

SELECT * FROM titles

SELECT SUM(YTD_SALES) FROM titles

SELECT SUM(ALL YTD_SALES) FROM titles

SELECT SUM(DISTINCT YTD_SALES) FROM titles

SELECT SUM(ROYALTY) FROM titles

SELECT SUM(ALL ROYALTY) FROM titles

SELECT SUM(DISTINCT ROYALTY) FROM titles

SELECT SUM(ROYALTY) FROM titles
WHERE TYPE='Psychology'

SELECT AVG(YTD_SALES) FROM titles

SELECT AVG(DISTINCT YTD_SALES) FROM titles

SELECT SUM(YTD_SALES)/COUNT(YTD_SALES) FROM titles

SELECT SUM(YTD_SALES),COUNT(YTD_SALES) FROM titles

SELECT MAX(YTD_SALES) FROM titles

SELECT MAX(DISTINCT YTD_SALES) FROM titles

SELECT MAX(YTD_SALES) FROM titles
WHERE TYPE='Psychology'

SELECT MIN(YTD_SALES) FROM titles

SELECT MIN(DISTINCT YTD_SALES) FROM titles

SELECT MIN(price) FROM titles

SELECT MIN(price) FROM titles
WHERE TYPE='Psychology'

SELECT 'BILL' + 'GATES'

SELECT 'BILL' + ' ' + 'GATES'

SELECT * FROM AUTHORS

SELECT city + STATE FROM AUTHORS

SELECT city + ', ' + STATE FROM AUTHORS

SELECT city + ' ' + STATE AS 'Address' FROM AUTHORS

SELECT Address + ', ' + city + ', ' + STATE AS 'Address'
FROM AUTHORS

SELECT city FROM AUTHORS

SELECT TRANSLATE(city,'MBS','TVK') FROM AUTHORS

SELECT REPLACE(city,'O','S') FROM AUTHORS

SELECT city,REPLACE(city,'O','S') FROM AUTHORS

SELECT REPLACE(city,'Oakland','Switzerland') 
FROM AUTHORS

SELECT city,REPLACE(city,'Oakland','Switzerland') 
FROM AUTHORS

SELECT * FROM AUTHORS

SELECT UPPER(city) FROM AUTHORS

SELECT lower(city) FROM AUTHORS

SELECT SUBSTRING(city,2,5) FROM AUTHORS

SELECT city,SUBSTRING(city,2,5) FROM AUTHORS

SELECT * FROM AUTHORS

SELECT au_id,SUBSTRING(au_id,1,3) FROM AUTHORS

SELECT SUBSTRING(au_id,1,3) FROM AUTHORS

SELECT au_id,SUBSTRING(au_id,8,4) FROM AUTHORS

SELECT CITY FROM AUTHORS

SELECT INSTR(CITY,'a',1,9) FROM AUTHORS

SELECT '          MADHULIKA'

SELECT LTRIM('         MADHULIKA')

SELECT LTRIM(CITY) FROM AUTHORS

SELECT address,SUBSTRING(address,3,10) FROM AUTHORS

SELECT address,LTRIM(SUBSTRING(address,3,10)) FROM AUTHORS

SELECT 'MADHULIKA                  '

SELECT RTRIM('MADHULIKA            ')

SELECT RTRIM(CITY) FROM AUTHORS

SELECT RTRIM(CITY,'Park') FROM AUTHORS

SELECT RTRIM(CITY) FROM AUTHORS
WHERE city = 'Oakland'

SELECT DECODE(AU_LNAME,'Dean','Straight','Not Found') 
FROM AUTHORS
-------------------30/05/2016---------------------

SELECT LEN(AU_LNAME) FROM AUTHORS

SELECT AU_LNAME,LEN(AU_LNAME) FROM AUTHORS

SELECT * FROM TITLES

SELECT NVL(YTD_SALES,00) FROM TITLES

SELECT ISNULL(YTD_SALES,00) FROM TITLES

SELECT TITLE FROM TITLES

SELECT LPAD(TITLE,25,'*') FROM TITLES

SELECT RPAD(TITLE,25,'-') FROM TITLES

--AMERICAN STANDARD CODE FOR INFOARMATION INTERCHANGE

SELECT ASCII('A')

SELECT ASCII('B')

SELECT ASCII('0')

SELECT ASCII('1')

SELECT ASCII('*')

SELECT PRICE FROM TITLES

SELECT STR(PRICE) FROM TITLES

SELECT PRICE,STR(PRICE) FROM TITLES

SELECT PRICE,NEW_PRICE=STR(PRICE) FROM TITLES
WHERE PRICE IS NOT NULL

SELECT * FROM AUTHORS

SELECT au_id,TO_NUMBER(au_id) FROM AUTHORS

SELECT PRICE,TO_CHAR(PRICE) FROM TITLES

SELECT AU_ID,SUBSTRING(AU_ID,2,5)
FROM AUTHORS

SELECT AU_FNAME+' '+AU_LNAME
FROM AUTHORS

SELECT AU_ID FROM AUTHORS

SELECT AU_ID,SUBSTRING(AU_ID,1,3)+' '+
SUBSTRING(AU_ID,5,2)+' '+SUBSTRING(AU_ID,8,4)
FROM AUTHORS

SELECT AU_LNAME,AU_FNAME,AU_ID,SUBSTRING(AU_ID,1,3)+
','+SUBSTRING(AU_ID,5,2)+','+SUBSTRING(AU_ID,8,4)
FROM AUTHORS

SELECT AU_LNAME,LEN(AU_LNAME)FROM AUTHORS

SELECT LEN(AU_LNAME)+LEN(AU_FNAME)
FROM AUTHORS

SELECT AU_LNAME,AU_FNAME,LEN(AU_LNAME)+LEN(AU_FNAME)
AS 'TOTAL LENGTH'
FROM AUTHORS


SELECT SUM(LEN(AU_LNAME)+LEN(AU_FNAME))
FROM AUTHORS

SELECT AU_LNAME,AU_FNAME,LEN(AU_LNAME)+LEN(AU_FNAME)
FROM AUTHORS

SELECT GETDATE()

SELECT * FROM TITLES

datepart
Abbreviations
year
yy , yyyy
quarter
qq , q
month
mm , m
dayofyear
dy , y
day
dd , d
week
wk , ww
weekday
dw , w
hour
hh
minute
mi , n
second
ss , s
millisecond
ms
microsecond
mcs
nanosecond
ns

SELECT PUBDATE,DATEPART(mm,PUBDATE) FROM TITLES

SELECT DATEPART(mm,PUBDATE) AS 'Book Publishing Month' 
FROM TITLES

SELECT DATEPART(yy,PUBDATE) AS 'Book Publishing Year' 
FROM TITLES

SELECT DATEPART(d,PUBDATE) AS 'Book Publishing Day' 
FROM TITLES

SELECT DATEPART(dd,GETDATE())

SELECT DATEPART(mm,GETDATE())

SELECT DATEPART(yy,GETDATE())

SELECT DATEPART(dy,GETDATE()) 

SELECT DATEPART(wk,GETDATE())

SELECT DATEPART(dw,GETDATE())

SELECT DATEPART(hh,GETDATE())

SELECT DATEPART(mi,GETDATE())

SELECT DATEPART(ss,GETDATE())

SELECT DATEPART(ms,GETDATE())

SELECT DATEPART(mm,GETDATE())

SELECT DATENAME(mm,GETDATE())

SELECT DATEPART(dw,GETDATE())

SELECT DATENAME(dw,GETDATE()) 

SELECT DATENAME(dw,'10/04/1993')  

SELECT DATEADD(dd,1000,getdate())

SELECT DATEADD(mm,1,PUBDATE) FROM TITLES

SELECT PUBDATE,DATEADD(MONTH,1,PUBDATE) FROM TITLES

SELECT DATEADD(DD,1000,GETDATE()) FROM TITLES

SELECT 

SELECT PUBDATE,PUBDATE+5 FROM TITLES
WHERE 

SELECT DATEDIFF(dd,'04/16/1995',GETDATE())

SELECT DATEDIFF(mm,'04/16/1995',GETDATE())

SELECT DATEDIFF(yy,'04/16/1995',GETDATE())

SELECT DATEDIFF(hh,'04/16/1995 04:15:00',GETDATE())

SELECT DATEDIFF(MI,'04/16/1995 09:15:00',GETDATE())

SELECT DATEDIFF(ss,'04/16/1995 09:15:00',GETDATE())

SELECT * FROM TITLES

SELECT DATEDIFF(mm,PUBDATE,GETDATE())
FROM TITLES

SELECT PUBDATE,DATEDIFF(yy,PUBDATE,GETDATE())
FROM TITLES

SELECT title,PUBDATE,DATEDIFF(dd,PUBDATE,GETDATE())
FROM TITLES

SELECT title,PUBDATE,DATEDIFF(mm,PUBDATE,GETDATE())
FROM TITLES

SELECT title,PUBDATE,DATEDIFF(yy,PUBDATE,GETDATE())
FROM TITLES

SELECT title,type,PUBDATE,DATEDIFF(yy,PUBDATE,GETDATE())
FROM TITLES
WHERE TYPE='psychology'

SELECT PUBDATE+1,PUBDATE+5 FROM TITLES
WHERE TITLE_ID = 'BU7832'

SELECT OVERLAP('04:00','11:23')

100	mon dd yyyy hh:mi AM/PM (Default)
101	mm/dd/yyyy (US standard)
102	yy.mm.dd (ANSI standard)
103	dd/mm/yy (British/French standard)
104	dd.mm.yy (German standard)
105	dd-mm-yy (Italian standard)
106	dd mon yy
107	Mon dd, yy
108	hh:mi:ss
109	mon dd yyyy hh:mi:ss:mmm AM/PM
110	mm-dd-yy (USA standard)
111	yy/mm/dd (Japan standard)
112	yymmdd (ISO standard)
113	dd mon yyyy hh:mi:ss:mmm (Europe standard - 24 hour clock)
114	hh:mi:ss:mmm (24 hour clock)
120	yyyy-mm-dd hh:mi:ss (ODBC canonical - 24 hour clock)
121	yyyy-mm-dd hh:mi:ss:mmm (ODBC canonical - 24 hour clock)
126	yyyy-mm-ddThh:mi:ss:mmm (ISO8601 standard)
127	yyyy-mm-ddThh:mi:ss:mmmZ (ISO8601 standard)
130	dd mon yyyy hh:mi:ss:mmmAM/PM (Hijri standard)
131	dd/mm/yy hh:mi:ss:mmmAM/PM (Hijri standard)

SELECT CONVERT(VARCHAR(30),GETDATE(),100)

SELECT CONVERT(VARCHAR(30),GETDATE(),109)

SELECT PUBDATE,DATENAME(mm,PUBDATE)
FROM TITLES

SELECT title,PUBDATE,
'Publishing Date Month'=DATENAME(mm,PUBDATE)
FROM TITLES

SELECT title,CONVERT(VARCHAR(30),PUBDATE)
FROM TITLES

SELECT title,CONVERT(VARCHAR(30),PUBDATE,100)
FROM TITLES

SELECT title,CONVERT(VARCHAR(30),PUBDATE,109)
FROM TITLES

SELECT CONVERT(VARCHAR(30),GETDATE(),103)

SELECT PUBDATE,CONVERT(VARCHAR(30),PUBDATE,103)
FROM TITLES

SELECT PUBDATE,CONVERT(VARCHAR(50),PUBDATE,113)
FROM TITLES

SELECT CONVERT(DATETIME,'05/30/2015')

SELECT * FROM TITLES

SELECT TYPE,
'AVERAGE PRICE'=AVG(PRICE),
'TOTAL ROYALTY'=SUM(ROYALTY),
'NO OF BOOKS'=COUNT(TITLE)
FROM TITLES
GROUP BY TYPE

SELECT TYPE,
'AVERAGE PRICE'=AVG(PRICE),
'TOTAL ROYALTY'=SUM(ROYALTY),
'NO OF BOOKS'=COUNT(TITLE)
FROM TITLES
WHERE PRICE > 20
GROUP BY TYPE

------------------31/05/2016-----------------
SELECT TYPE,
'AVERAGE PRICE'=AVG(PRICE),
'TOTAL ROYALTY'=SUM(ROYALTY),
'NO OF BOOKS'=COUNT(TITLE)
FROM TITLES
WHERE PRICE > 20
GROUP BY TYPE
ORDER BY TYPE

SELECT TYPE,
'AVERAGE PRICE'=AVG(PRICE),
'TOTAL ROYALTY'=SUM(ROYALTY),
'NO OF BOOKS'=COUNT(TITLE)
FROM TITLES
WHERE PRICE > 20
GROUP BY TYPE
ORDER BY TYPE DESC

SELECT TYPE,
'AVERAGE PRICE'=AVG(PRICE),
'TOTAL ROYALTY'=SUM(ROYALTY),
'NO OF BOOKS'=COUNT(TITLE)
FROM TITLES
WHERE PRICE > 20
GROUP BY TYPE
HAVING AVG(PRICE)>25
ORDER BY TYPE

SELECT TYPE,
'AVERAGE PRICE'=AVG(PRICE),
'TOTAL ROYALTY'=SUM(ROYALTY),
'NO OF BOOKS'=COUNT(TITLE)
FROM TITLES
WHERE PRICE > 20
GROUP BY TYPE
HAVING COUNT(TITLE)>1
ORDER BY TYPE

SELECT TYPE,
'AVERAGE PRICE'=AVG(PRICE),
'TOTAL ROYALTY'=SUM(ROYALTY),
'NO OF BOOKS'=COUNT(TITLE)
FROM TITLES
GROUP BY TYPE
HAVING COUNT(TITLE)>2
ORDER BY TYPE

SELECT * FROM AUTHORS

SELECT STATE,COUNT(AU_ID)
FROM AUTHORS
GROUP BY STATE

SELECT STATE,CITY,COUNT(AU_ID)
FROM AUTHORS
GROUP BY STATE,CITY

SELECT STATE,CITY
FROM AUTHORS
GROUP BY STATE,CITY

SELECT CITY,AU_FNAME
FROM AUTHORS
GROUP BY CITY,AU_FNAME

SELECT * FROM TITLES

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type

SELECT SUM(advance)
FROM TITLES

SELECT type,avg(advance)
FROM TITLES
GROUP BY type

SELECT type,COUNT(advance)
FROM TITLES
GROUP BY type

SELECT type,'No of Books'=COUNT(advance),
'Total Advance'=SUM(advance)
FROM TITLES
GROUP BY type

SELECT type
FROM TITLES

SELECT type
FROM TITLES
GROUP BY type

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type
ORDER BY type ASC

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type
ORDER BY type DESC

SELECT * FROM TITLES
WHERE advance > 5000

SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 5000
GROUP BY type
ORDER BY type DESC

SELECT type,SUM(advance)
FROM TITLES
WHERE PRICE > 10
GROUP BY type
ORDER BY type DESC

SELECT type,SUM(advance),SUM(price)
FROM TITLES
WHERE PRICE > 10
GROUP BY type
ORDER BY type DESC

SELECT type,MIN(advance),MAX(advance),
SUM(advance),AVG(advance)
FROM TITLES
GROUP BY type

SELECT * FROM TITLES

SELECT * FROM AUTHORS

SELECT CITY,COUNT(*)
FROM AUTHORS
GROUP BY CITY

SELECT CITY,COUNT(CITY)
FROM AUTHORS
GROUP BY CITY

SELECT type,AVG(advance),AVG(price)
FROM TITLES
WHERE type IN('business','psychology','trad_cook')
GROUP BY type

SELECT type,AVG(advance),AVG(price)
FROM TITLES
WHERE type NOT IN('business','psychology','trad_cook')
GROUP BY type

SELECT type,AVG(advance),AVG(price)
FROM TITLES
WHERE type IN('business','psychology','trad_cook')
GROUP BY type
ORDER BY 2,3 --COLUMN NO. AVG(advance),AVG(price)

SELECT type,AVG(advance),AVG(price)
FROM TITLES
WHERE type IN('business','psychology','trad_cook')
GROUP BY type
ORDER BY 2 DESC --COLUMN NO. AVG(advance),AVG(price)

SELECT type,AVG(advance)FROM TITLES
WHERE type IN('business','psychology','trad_cook')
GROUP BY type
UNION
SELECT type,AVG(advance)FROM TITLES
WHERE type NOT IN('business','psychology','trad_cook')
GROUP BY type

SELECT type,AVG(advance)FROM TITLES
WHERE type IN('business','psychology','trad_cook')
GROUP BY type
UNION
SELECT type,AVG(advance)FROM TITLES
GROUP BY type
ORDER BY 2,1

SELECT CITY,AU_FNAME,AU_LNAME
FROM AUTHORS
GROUP BY CITY,AU_FNAME,AU_LNAME

SELECT CITY,COUNT(*)
FROM AUTHORS
GROUP BY CITY
ORDER BY 2,1

SELECT CITY,COUNT(*)
FROM AUTHORS
GROUP BY CITY
ORDER BY 2 DESC

----------------01/06/2016----------------------

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type
HAVING SUM(advance) > 5000

SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 400
GROUP BY type

SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 400
GROUP BY type
HAVING SUM(advance) > 5000
ORDER BY type

SELECT type,SUM(advance)
FROM TITLES
WHERE type <> 'psychology'
GROUP BY type
HAVING SUM(advance) > 5000
ORDER BY 2 DESC

SELECT type,pub_id
FROM TITLES
GROUP BY type,pub_id
ORDER BY type

SELECT SUM(advance)
FROM TITLES

SELECT SUM(advance)
FROM TITLES
GROUP BY advance

SELECT SUM(advance)
FROM TITLES
GROUP BY advance

SELECT MIN(advance),MAX(advance),
SUM(advance),AVG(advance)
FROM TITLES

SELECT * FROM AUTHORS

SELECT CITY FROM AUTHORS
GROUP BY CITY

SELECT CITY,COUNT(*) FROM AUTHORS
GROUP BY CITY

SELECT type,AVG(advance),AVG(price)
FROM TITLES
GROUP BY type

SELECT type,AVG(advance),AVG(price)
FROM TITLES
WHERE type IN('business','psychology','trad_cook')
GROUP BY type

SELECT type,AVG(advance),AVG(price)
FROM TITLES
WHERE type IN('business','psychology','trad_cook')
GROUP BY type
ORDER BY 2,3 --COLUMN NO. AVG(advance),AVG(price)

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type
HAVING SUM(advance) > 5000


SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 400
GROUP BY type

SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 400
GROUP BY type
HAVING SUM(advance) > 5000
ORDER BY type

SELECT type,SUM(advance)
FROM TITLES
WHERE type <> 'psychology'
GROUP BY type
HAVING SUM(advance) > 5000
ORDER BY 2

--------------01/06/2016----------------
SELECT * FROM AUTHORS

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT * FROM TITLEAUTHOR

SELECT * FROM SALES

SELECT * FROM DISCOUNTS

SELECT * FROM EMPLOYEE

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,
AU_ORD,ROYALTYPER
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID


SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,PHONE,ADDRESS,
CITY,STATE,ZIP,CONTRACT,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PUB_ID,PRICE,ADVANCE,ROYALTY,
YTD_SALES,NOTES,PUBDATE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID

SELECT AUTHORS.AU_ID,AU_LNAME,AU_FNAME,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE,PRICE
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID

SELECT AUTHORS.AU_ID,
'TOTAL ADVANCE'=SUM(ADVANCE),
'TOTAL SALES'=SUM(YTD_SALES)
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
GROUP BY AUTHORS.AU_ID
HAVING SUM(YTD_SALES) > 10

SELECT AU_FNAME,
'TOTAL ADVANCE'=SUM(ADVANCE),
'TOTAL SALES'=SUM(YTD_SALES)
FROM AUTHORS INNER JOIN TITLEAUTHOR
ON AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
INNER JOIN TITLES
ON TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID
GROUP BY AU_FNAME
HAVING SUM(YTD_SALES) > 10

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id
WHERE price > 20

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES INNER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES,PUBLISHERS
WHERE PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price 
FROM TITLES,PUBLISHERS
WHERE PUBLISHERS.pub_id = TITLES.pub_id

SELECT DISTINCT PUBLISHERS.pub_id,pub_name,city 
FROM TITLES,PUBLISHERS
WHERE PUBLISHERS.pub_id = TITLES.pub_id

SELECT * 
FROM TITLES,PUBLISHERS
WHERE PUBLISHERS.pub_id = TITLES.pub_id

SELECT TITLES.*,PUBLISHERS.pub_id,pub_name 
FROM TITLES,PUBLISHERS
WHERE PUBLISHERS.pub_id = TITLES.pub_id

SELECT AUTHORS.*,
AU_ORD,ROYALTYPER,
TITLES.TITLE_ID,TITLE,TYPE
FROM AUTHORS,TITLEAUTHOR,TITLES
WHERE AUTHORS.AU_ID = TITLEAUTHOR.AU_ID
AND
TITLES.TITLE_ID = TITLEAUTHOR.TITLE_ID


SELECT * FROM TITLES
JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT TITLES.*,
PUBLISHERS.pub_name,PUBLISHERS.city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT TIT.*,PUB.pub_id,
PUB.pub_name,PUB.city 
FROM TITLES TIT JOIN PUBLISHERS PUB
ON PUB.pub_id = TIT.pub_id

SELECT TIT.TITLE_ID,TIT.TITLE,TIT.PRICE,
PUB.pub_id,PUB.pub_name,PUB.city 
FROM TITLES TIT JOIN PUBLISHERS PUB
ON PUB.pub_id = TIT.pub_id
WHERE price > 20

SELECT * FROM TITLES
PUBLISHERS

SELECT * FROM TITLES
JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT title_id,title,price,
PUBLISHERS.pub_id,pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT DISTINCT PUBLISHERS.pub_id,pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT DISTINCT PUBLISHERS.pub_id,pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id != TITLES.pub_id

SELECT DISTINCT PUBLISHERS.pub_id,pub_name,city 
FROM TITLES,PUBLISHERS
WHERE PUBLISHERS.pub_id = TITLES.pub_id

SELECT DISTINCT PUBLISHERS.pub_id,pub_name,city 
FROM TITLES,PUBLISHERS
WHERE PUBLISHERS.pub_id <> TITLES.pub_id

SELECT * 
FROM TITLES,PUBLISHERS

SELECT DISTINCT PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id != TITLES.pub_id

SELECT title_id,title,price,
PUBLISHERS.pub_id,pub_name,city 
FROM TITLES LEFT OUTER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES RIGHT OUTER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES FULL OUTER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES FULL OUTER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

-----------------02/06/2016--------

SELECT * FROM TITLES

SELECT T1.title_id,T1.title,T1.price,T1.ytd_sales,
T1.advance
FROM TITLES T1 JOIN TITLES T2
ON T1.advance = T2.ytd_sales

SELECT * FROM TITLES

SELECT * FROM AUTHORS

SELECT * FROM TITLEAUTHOR

SELECT T.TITLE,A.AU_FNAME
FROM TITLES T,TITLEAUTHOR TA,AUTHORS A
WHERE T.TITLE_ID = TA.TITLE_ID 
AND TA.AU_ID = A.AU_ID

SELECT T.TITLE,A.AU_FNAME
FROM TITLES T,AUTHORS A

SELECT A.AU_LNAME,B.AU_LNAME,A.AU_FNAME
FROM AUTHORS A,AUTHORS B
WHERE A.AU_LNAME =B.AU_LNAME

SELECT * FROM SALES

SELECT * FROM AUTHORS

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT AUTHORS.au_id,AU_LNAME,AU_FNAME,
TITLES.title_id,title,price,
au_ord,royaltyper
FROM AUTHORS JOIN TITLEAUTHOR
ON AUTHORS.au_id = TITLEAUTHOR.au_id
JOIN TITLES
ON TITLES.title_id = TITLEAUTHOR.title_id

SELECT title_id,title,price,
PUBLISHERS.pub_id,pub_name,city 
FROM TITLES ,PUBLISHERS

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT DISTINCT PUBLISHERS.pub_id,pub_name,city
FROM PUBLISHERS,TITLES
WHERE PUBLISHERS.pub_id = TITLES.pub_id

SELECT pub_id,pub_name,city
FROM PUBLISHERS
WHERE pub_id IN (SELECT DISTINCT pub_id FROM TITLES)

SELECT pub_id,pub_name,city
FROM PUBLISHERS
WHERE pub_id NOT IN (SELECT DISTINCT pub_id FROM TITLES)

SELECT * FROM TITLES

SELECT * FROM SALES

SELECT T.title_id,T.title,T.ytd_sales
FROM TITLES T
WHERE T.ytd_sales = (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
SELECT T.title_id,T.title,T.ytd_sales
FROM TITLES T
WHERE T.ytd_sales < (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
SELECT title_id,title,ytd_sales
FROM TITLES 
WHERE ytd_sales > (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
SELECT title_id,title,ytd_sales
FROM TITLES 
WHERE ytd_sales <= (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
SELECT title_id,title,ytd_sales
FROM TITLES 
WHERE ytd_sales >= (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
SELECT title_id,title,ytd_sales
FROM TITLES 
WHERE ytd_sales != (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
SELECT * FROM TITLES

SELECT * FROM PUBLISHERS
					
SELECT pub_id,pub_name,city
FROM PUBLISHERS
WHERE pub_id IN (SELECT DISTINCT pub_id FROM TITLES
				 WHERE PRICE BETWEEN 20 AND 50)
				 
SELECT pub_id,pub_name,city
FROM PUBLISHERS
WHERE pub_id IN (SELECT DISTINCT pub_id FROM TITLES
				 WHERE PRICE NOT BETWEEN 20 AND 50)
				 
SELECT pub_id,pub_name,city
FROM PUBLISHERS
WHERE pub_id BETWEEN 20 AND (SELECT DISTINCT pub_id FROM TITLES
				 WHERE PRICE NOT BETWEEN 20 AND 50)
				 
SELECT title_id,title,ytd_sales
FROM TITLES 
WHERE ytd_sales BETWEEN 5 AND (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT * FROM SALES
				
SELECT DISTINCT PUBLISHERS.pub_id,pub_name,city
FROM PUBLISHERS,TITLES
WHERE PUBLISHERS.PUB_ID = TITLES.PUB_ID
AND ytd_sales >= (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')

----------------- END OF 02/06/2016---------------------------




					
				
SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT * FROM SALES
					
SELECT T.title_id,T.title,T.ytd_sales,
P.PUB_ID,P.PUB_NAME,P.CITY
FROM TITLES T JOIN PUBLISHERS P
ON T.PUB_ID = P.PUB_ID
WHERE T.ytd_sales > (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')

SELECT * FROM TITLES	
				
SELECT * INTO MY_TITLE
FROM TITLES

SELECT * FROM MY_TITLE

DELETE MY_TITLE

INSERT INTO MY_TITLE
SELECT T.title_id,title,type,pub_id,price,advance ,
royalty,ytd_sales,notes,pubdate
FROM titles T JOIN sales S  
on T.title_id = S.title_id
WHERE T.ytd_sales > (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
--02/06/2015--

SELECT * FROM TITLES

SELECT * FROM SALES
					
UPDATE TITLES
SET PRICE = PRICE + (PRICE*1/100)
WHERE title_id IN(SELECT title_id from sales where qty > 10)

DELETE TITLES
WHERE title_id 
IN (SELECT title_id from sales where qty < 5)

SELECT * FROM TITLES

SELECT * FROM TITLEAUTHOR

SELECT * FROM AUTHORS

--  NESTED SUB QUERY
					
SELECT TITLE_ID,TITLE,PRICE
FROM TITLES
WHERE TITLE_ID IN
 (SELECT TITLE_ID FROM TITLEAUTHOR 
  WHERE au_id IN
  (SELECT au_id FROM AUTHORS 
   WHERE au_lname = 'White' AND au_fname = 'Johnson')) 
   
SELECT * FROM TITLES

SELECT * FROM SALES

-- Corelated subquery 
  
SELECT TITLE_ID,TITLE,PRICE,ytd_sales
FROM TITLES TIT
WHERE ytd_sales >
 (SELECT SUM(qty) from sales SAL 
   WHERE TIT.TITLE_ID = SAL.TITLE_ID)



























-----------------------------------------------

--------------------------Not Taoght------------

SELECT * FROM PUBLISHERS
WHERE EXISTS (SELECT * FROM AUTHORS
WHERE state = 'UT' AND contract = 1)

SELECT * FROM PUBLISHERS
WHERE EXISTS (SELECT * FROM AUTHORS
WHERE state = 'UT' AND contract = 0)

SELECT * FROM PUBLISHERS
WHERE NOT EXISTS (SELECT * FROM AUTHORS
WHERE state = 'UT' AND contract = 1)

SELECT * FROM PUBLISHERS
WHERE NOT EXISTS (SELECT * FROM AUTHORS
WHERE state = 'UT' AND contract = 0)

SELECT * FROM AUTHORS
SELECT * FROM titles
SELECT * FROM TITLEAUTHOR

SELECT * FROM titles INNER JOIN TITLEAUTHOR
ON titles.title_id = TITLEAUTHOR.title_id
INNER JOIN AUTHORS 
ON  TITLEAUTHOR.au_id = AUTHORS.au_id

SELECT * FROM AUTHORS
WHERE EXISTS (SELECT * FROM titles INNER JOIN TITLEAUTHOR
ON titles.title_id = TITLEAUTHOR.title_id
WHERE TITLEAUTHOR.au_id = AUTHORS.au_id)

SELECT * FROM titles 
WHERE ytd_sales BETWEEN 1000 AND 7000

SELECT * FROM titles 
WHERE ytd_sales NOT BETWEEN 1000 AND 7000

SELECT * FROM titles 
WHERE ytd_sales NOT BETWEEN 0 AND 5000

SELECT * FROM AUTHORS
SELECT * FROM titles
SELECT * FROM TITLEAUTHOR

SELECT AU_LNAME,AU_FNAME FROM authors
WHERE au_id IN(SELECT au_id FROM TITLEAUTHOR 
WHERE ROYALTYPER = 100)

SELECT AU_LNAME,AU_FNAME FROM authors
WHERE au_id NOT IN(SELECT au_id FROM TITLEAUTHOR 
WHERE ROYALTYPER = 100)

SELECT AU_LNAME,CITY FROM authors
WHERE city <> ALL(SELECT city FROM PUBLISHERS)

SELECT AU_LNAME,CITY FROM authors
WHERE city = ALL(SELECT city FROM PUBLISHERS)

SELECT AU_LNAME,CITY FROM authors
WHERE city <> ANY(SELECT city FROM PUBLISHERS)

SELECT AU_LNAME,CITY FROM authors
WHERE city = ANY(SELECT city FROM PUBLISHERS)

SELECT * FROM authors
WHERE phone LIKE '415%'

SELECT * FROM authors
WHERE ZIP LIKE '[928]4025'

SELECT * FROM authors
WHERE ZIP LIKE '[^328]0205'

SELECT * FROM authors
WHERE ZIP LIKE '9460_'

UPDATE authors
SET contract = 1
WHERE phone LIKE '415%' 

UPDATE authors
SET contract = 1
WHERE ZIP LIKE '[928]4025'

UPDATE authors
SET contract = 1
WHERE ZIP LIKE '[^328]0205'

UPDATE authors
SET contract = 1
WHERE ZIP LIKE '9460_'

SELECT * FROM titles
WHERE price IS NULL

SELECT * FROM titles
WHERE price IS NOT NULL

SELECT ISNULL(PRICE,$0.00) FROM titles

SELECT PRICE FROM titles
WHERE price IS NULL

SELECT PRICE FROM titles
WHERE price IS NOT NULL

SELECT * FROM titles
WHERE price = 20

SELECT * FROM titles
WHERE price <> 20

SELECT * FROM AUTHORS
WHERE zip = '95128'

SELECT * FROM AUTHORS
WHERE zip <> '95128'

SELECT * FROM titles
WHERE price > 20

SELECT * FROM titles
WHERE price < 20

SELECT * FROM AUTHORS
WHERE zip > '95128'

SELECT * FROM AUTHORS
WHERE zip < '95128'

SELECT * FROM EMPLOYEE

SELECT EMP_ID,LNAME,FNAME,PUB_ID
FROM EMPLOYEE
WHERE PUB_ID = NULL

SELECT EMP_ID,LNAME,FNAME,PUB_ID
FROM EMPLOYEE
WHERE PUB_ID IS NULL

SELECT EMP_ID,LNAME,FNAME,PUB_ID
FROM EMPLOYEE
WHERE PUB_ID IS NOT NULL

SELECT * FROM titles 
WHERE ytd_sales BETWEEN 1000 AND 7000

SELECT * FROM titles 
WHERE ytd_sales NOT BETWEEN 1000 AND 7000

SELECT * FROM titles 
WHERE title_id IN('BU1032','PC8888','MC2222')

SELECT * FROM titles 
WHERE ytd_sales IN(2032,4095,375)

SELECT * FROM titles 
WHERE title_id NOT IN('BU1032','PC8888','MC2222')

SELECT * FROM titles 
WHERE ytd_sales NOT IN(2032,4095,375)

SELECT * FROM authors
WHERE phone LIKE '415%'

SELECT * FROM authors
WHERE phone NOT LIKE '415%'


SELECT * FROM authors
WHERE phone LIKE '%15%'

SELECT * FROM authors
WHERE phone LIKE '_08%'

SELECT * FROM authors
WHERE phone LIKE '7_%_%'

SELECT * FROM authors
WHERE phone LIKE '_1%3'

SELECT * FROM authors
WHERE zip LIKE '2___3'


SELECT * FROM authors
WHERE phone NOT LIKE '%15%'

SELECT * FROM authors
WHERE phone NOT LIKE '_08%'

SELECT * FROM authors
WHERE phone NOT LIKE '7_%_%'

SELECT * FROM authors
WHERE phone NOT LIKE '_1%3'

SELECT * FROM authors
WHERE zip NOT LIKE '2___3'

SELECT * FROM authors
WHERE ZIP NOT  LIKE'[928]4025'

SELECT * FROM authors
WHERE ZIP LIKE '[^328]0205'

SELECT * FROM authors
WHERE ZIP LIKE '9460_'

SELECT * FROM titles
WHERE EXISTS (SELECT * FROM titles WHERE price < 100)

SELECT * FROM titles
WHERE NOT EXISTS (SELECT * FROM titles WHERE price > 10000)

SELECT * FROM titles
WHERE EXISTS (SELECT * FROM titles WHERE price > 10000)

--28/05/2015

SELECT price FROM titles

SELECT DISTINCT price FROM titles

SELECT ALL price FROM titles

SELECT * FROM titles
WHERE price > ALL (SELECT PRICE FROM titles WHERE price < 10)

SELECT * FROM titles
WHERE price > ANY (SELECT PRICE FROM titles WHERE price < 10)

SELECT * FROM titles
WHERE price > 10 AND price < 30

SELECT * FROM titles
WHERE title_id = 'BU1111' OR title_id = 'MC2222' 

SELECT * FROM titles
WHERE title_id = 'BU1111' OR title_id = 'MC2222' OR 
title_id = 'PC1035'

SELECT * FROM titles
WHERE ytd_sales IS NULL

SELECT * FROM titles
WHERE ytd_sales IS NOT  NULL

SELECT 50 + 20

SELECT 50 - 20

SELECT 50 * 20

SELECT 50 / 20

SELECT 50 % 20

SELECT * FROM titles


SELECT price + YTD_SALES AS 'TOTAL AMOUNT' FROM titles

SELECT price FROM titles
WHERE price + YTD_SALES > 5000

SELECT  YTD_SALES - price AS 'DIFFERENCE AMOUNT' 
FROM titles

SELECT price FROM titles
WHERE YTD_SALES - price > 5000

SELECT  price * 10 AS 'PRODUCT AMOUNT' 
FROM titles

SELECT price FROM titles
WHERE price * 10 > 50

SELECT  price / 10 AS 'QUOTIENT AMOUNT' 
FROM titles

SELECT price FROM titles
WHERE price / 10 < 50

SELECT  price * 10 +1000 AS 'AMOUNT' 
FROM titles

SELECT  (price * 10) +1 000 AS 'AMOUNT' 
FROM titles
WHERE price > 20

SELECT  YTD_SALES / 52 + price
FROM titles

SELECT  YTD_SALES - 1000 + price / 52
FROM titles

SELECT (YTD_SALES - 1000 + price) / 52
FROM titles

SELECT YTD_SALES
FROM titles
WHERE YTD_SALES < PRICE * 3  + 10 / 2 - 50

SELECT * FROM titles

SELECT COUNT(*) FROM titles

SELECT COUNT(TITLE_ID) FROM titles

SELECT COUNT(YTD_SALES) FROM titles

SELECT COUNT(DISTINCT YTD_SALES) FROM titles

SELECT COUNT(ALL YTD_SALES) FROM titles

SELECT SUM(YTD_SALES) FROM titles

SELECT SUM(ALL YTD_SALES) FROM titles

SELECT SUM(DISTINCT YTD_SALES) FROM titles

SELECT AVG(YTD_SALES) FROM titles

SELECT AVG(DISTINCT YTD_SALES) FROM titles

SELECT MAX(YTD_SALES) FROM titles

SELECT MAX(DISTINCT YTD_SALES) FROM titles

SELECT MIN(YTD_SALES) FROM titles

SELECT MIN(DISTINCT YTD_SALES) FROM titles

SELECT 'BILL' + 'GATES'

SELECT 'BILL' + ' ' + 'GATES'

SELECT * FROM AUTHORS

SELECT city + STATE FROM AUTHORS

SELECT city + ' ' + STATE FROM AUTHORS

SELECT city FROM AUTHORS

SELECT TRANSLATE(city,'MBS','TVK') FROM AUTHORS

SELECT REPLACE(city,'O','S') FROM AUTHORS

SELECT REPLACE(city,'Oakland','Switzerland') FROM AUTHORS

SELECT UPPER(city) FROM AUTHORS

SELECT lower(city) FROM AUTHORS

SELECT city,SUBSTRING(city,2,5) FROM AUTHORS

SELECT SUBSTRING(city,2,5) FROM AUTHORS

SELECT * FROM AUTHORS

SELECT au_id,SUBSTRING(au_id,1,3) FROM AUTHORS

SELECT SUBSTRING(au_id,1,3) FROM AUTHORS

SELECT au_id,SUBSTRING(au_id,8,4) FROM AUTHORS

SELECT CITY FROM AUTHORS

SELECT INST(CITY,'a',1,9) FROM AUTHORS

SELECT '          MADHULIKA'

SELECT LTRIM('         MADHULIKA')

SELECT LTRIM(CITY) FROM AUTHORS

SELECT 'MADHULIKA                  '

SELECT RTRIM('MADHULIKA            ')

SELECT RTRIM(CITY) FROM AUTHORS

SELECT RTRIM(CITY,'Park') FROM AUTHORS

SELECT RTRIM(CITY) FROM AUTHORS
WHERE city = 'Oakland'

--29/05/2015

SELECT DECODE(AU_LNAME,'Dean','Straight','Not Found') 
FROM AUTHORS

SELECT LEN(AU_LNAME) FROM AUTHORS

SELECT AU_LNAME,LEN(AU_LNAME) FROM AUTHORS

SELECT * FROM TITLES

SELECT NVL(YTD_SALES,00) FROM TITLES

SELECT TITLE FROM TITLES

SELECT LPAD(TITLE,25,'*') FROM TITLES

SELECT RPAD(TITLE,25,'-') FROM TITLES

SELECT ASCII('A')

SELECT ASCII('B')

SELECT ASCII('0')

SELECT ASCII('1')

SELECT ASCII('*')

SELECT PRICE FROM TITLES

SELECT STR(PRICE) FROM TITLES

SELECT PRICE,NEW_PRICE=STR(PRICE) FROM TITLES
WHERE PRICE IS NOT NULL

SELECT * FROM AUTHORS

SELECT au_id,TO_NUMBER(au_id) FROM AUTHORS

SELECT PRICE,TO_CHAR(PRICE) FROM TITLES

SELECT AU_ID,SUBSTRING(AU_ID,2,5)
FROM AUTHORS


SELECT AU_LNAME,AU_FNAME,AU_ID,SUBSTRING(AU_ID,1,3)+' '+SUBSTRING(AU_ID,5,2)+' '+SUBSTRING(AU_ID,8,4)
FROM AUTHORS

SELECT AU_LNAME,LEN(AU_LNAME)FROM AUTHORS

SELECT LEN(AU_LNAME)+LEN(AU_FNAME)
FROM AUTHORS


SELECT AU_LNAME,AU_FNAME,LEN(AU_LNAME)+LEN(AU_FNAME)
FROM AUTHORS

SELECT GETDATE()

SELECT * FROM TITLES

datepart
Abbreviations
year
yy , yyyy
quarter
qq , q
month
mm , m
dayofyear
dy , y
day
dd , d
week
wk , ww
weekday
dw , w
hour
hh
minute
mi , n
second
ss , s
millisecond
ms
microsecond
mcs
nanosecond
ns

SELECT PUBDATE,DATEPART(mm,PUBDATE) FROM TITLES

SELECT DATEPART(dd,GETDATE())
SELECT DATEPART(mm,GETDATE())
SELECT DATEPART(yy,GETDATE())
SELECT DATEPART(dy,GETDATE()) 
SELECT DATEPART(wk,GETDATE())
SELECT DATEPART(hh,GETDATE())
SELECT DATEPART(mi,GETDATE())
SELECT DATEPART(ss,GETDATE())
SELECT DATEPART(ms,GETDATE())

SELECT DATEPART(mm,GETDATE())
SELECT DATENAME(mm,GETDATE())

SELECT DATEPART(dw,GETDATE())
SELECT DATENAME(dw,GETDATE())  

SELECT DATEADD(dd,1000,getdate())

SELECT DATEADD(mm,1,PUBDATE) FROM TITLES

SELECT PUBDATE,DATEADD(mm,1,PUBDATE) FROM TITLES

SELECT DATEDIFF(dd,'07/12/1980',GETDATE())
SELECT DATEDIFF(mm,'07/12/1980',GETDATE())
SELECT DATEDIFF(yy,'07/12/1980',GETDATE())
SELECT DATEDIFF(hh,'07/12/1980 09:55:00',GETDATE())
SELECT DATEDIFF(MI,'07/12/1980 09:55:00',GETDATE())
SELECT DATEDIFF(ss,'07/12/1980 09:55:00',GETDATE())

SELECT DATEDIFF(mm,PUBDATE,GETDATE())
FROM TITLES

SELECT title,PUBDATE,DATEDIFF(dd,PUBDATE,GETDATE())
FROM TITLES

SELECT title,PUBDATE,DATEDIFF(mm,PUBDATE,GETDATE())
FROM TITLES

SELECT title,PUBDATE,DATEDIFF(yy,PUBDATE,GETDATE())
FROM TITLES

--30/05/2015--

ELECT PUBDATE+1,PUBDATE+5 FROM TITLES
WHERE TITLE_ID = 'BU7832'



100	mon dd yyyy hh:miAM/PM (Default)
101	mm/dd/yyyy (US standard)
102	yy.mm.dd (ANSI standard)
103	dd/mm/yy (British/French standard)
104	dd.mm.yy (German standard)
105	dd-mm-yy (Italian standard)
106	dd mon yy
107	Mon dd, yy
108	hh:mi:ss
109	mon dd yyyy hh:mi:ss:mmmAM/PM
110	mm-dd-yy (USA standard)
111	yy/mm/dd (Japan standard)
112	yymmdd (ISO standard)
113	dd mon yyyy hh:mi:ss:mmm (Europe standard - 24 hour clock)
114	hh:mi:ss:mmm (24 hour clock)
120	yyyy-mm-dd hh:mi:ss (ODBC canonical - 24 hour clock)
121	yyyy-mm-dd hh:mi:ss:mmm (ODBC canonical - 24 hour clock)
126	yyyy-mm-ddThh:mi:ss:mmm (ISO8601 standard)
127	yyyy-mm-ddThh:mi:ss:mmmZ (ISO8601 standard)
130	dd mon yyyy hh:mi:ss:mmmAM/PM (Hijri standard)
131	dd/mm/yy hh:mi:ss:mmmAM/PM (Hijri standard)

SELECT CONVERT(VARCHAR(30),GETDATE(),100)

SELECT PUBDATE,DATENAME(mm,PUBDATE)
FROM TITLES

SELECT title,PUBDATE,'Month'=DATENAME(mm,PUBDATE)
FROM TITLES

SELECT title,CONVERT(VARCHAR(30),PUBDATE,100)
FROM TITLES

SELECT CONVERT(VARCHAR(30),GETDATE(),103)

SELECT PUBDATE,CONVERT(VARCHAR(30),PUBDATE,103)
FROM TITLES

SELECT PUBDATE,CONVERT(VARCHAR(50),PUBDATE,113)
FROM TITLES

SELECT CONVERT(DATETIME,'05/30/2015')

SELECT * FROM TITLES

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type

SELECT type,avg(advance)
FROM TITLES
GROUP BY type


SELECT type,COUNT(advance)
FROM TITLES
GROUP BY type

SELECT type,'No fo Books'=COUNT(advance),'Total'=SUM(advance)
FROM TITLES
GROUP BY type

SELECT type
FROM TITLES

SELECT type
FROM TITLES
GROUP BY type

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type
ORDER BY type ASC

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type
ORDER BY type DESC

SELECT * FROM TITLES
WHERE advance > 5000

SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 5000
GROUP BY type
ORDER BY type DESC

SELECT type,SUM(advance)
FROM TITLES
WHERE PRICE > 10
GROUP BY type
ORDER BY type DESC

SELECT type,SUM(advance),SUM(price)
FROM TITLES
WHERE PRICE > 10
GROUP BY type
ORDER BY type DESC

SELECT type,MIN(advance),MAX(advance),
SUM(advance),AVG(advance)
FROM TITLES
GROUP BY type

SELECT * FROM TITLES

SELECT type,pub_id,MIN(advance),MAX(advance),
SUM(advance),AVG(advance)
FROM TITLES
GROUP BY type,pub_id
ORDER BY type

SELECT type,pub_id
FROM TITLES
GROUP BY type,pub_id
ORDER BY type

SELECT SUM(advance)
FROM TITLES

SELECT SUM(advance)
FROM TITLES
GROUP BY advance

SELECT SUM(advance)
FROM TITLES
GROUP BY advance

SELECT MIN(advance),MAX(advance),
SUM(advance),AVG(advance)
FROM TITLES

SELECT * FROM AUTHORS

SELECT CITY FROM AUTHORS
GROUP BY CITY

SELECT CITY,COUNT(*) FROM AUTHORS
GROUP BY CITY

SELECT type,AVG(advance),AVG(price)
FROM TITLES
GROUP BY type

SELECT type,AVG(advance),AVG(price)
FROM TITLES
WHERE type IN('business','psychology','trad_cook')
GROUP BY type

SELECT type,AVG(advance),AVG(pri ce)
FROM TITLES
WHERE type IN('business','psychology','trad_cook')
GROUP BY type
ORDER BY 2,3 --COLUMN NO. AVG(advance),AVG(price)

SELECT type,SUM(advance)
FROM TITLES
GROUP BY type
HAVING SUM(advance) > 5000


SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 400
GROUP BY type

SELECT type,SUM(advance)
FROM TITLES
WHERE advance > 400
GROUP BY type
HAVING SUM(advance) > 5000
ORDER BY type

SELECT type,SUM(advance)
FROM TITLES
WHERE type <> 'psychology'
GROUP BY type
HAVING SUM(advance) > 5000
ORDER BY 2

SELECT * FROM AUTHORS

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT * FROM TITLEAUTHOR

SELECT * FROM SALES

SELECT * FROM DISCOUNTS

SELECT * FROM EMPLOYEE

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id
WHERE price > 20

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES INNER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES INNER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id
WHERE price > 20

SELECT * FROM TITLES
JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT TITLES.*,
PUBLISHERS.pub_name,PUBLISHERS.city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT TIT.*,PUB.pub_id,
PUB.pub_name,PUB.city 
FROM TITLES TIT JOIN PUBLISHERS PUB
ON PUB.pub_id = TIT.pub_id

SELECT TIT.*,PUB.pub_id,
PUB.pub_name,PUB.city 
FROM TITLES TIT JOIN PUBLISHERS PUB
ON PUB.pub_id = TIT.pub_id
WHERE price > 20

SELECT * FROM TITLES
PUBLISHERS

SELECT * FROM TITLES
JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES JOIN PUBLISHERS
ON PUBLISHERS.pub_id != TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES LEFT OUTER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES RIGHT OUTER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT title_id,title,price,PUBLISHERS.pub_id,
pub_name,city 
FROM TITLES FULL OUTER JOIN PUBLISHERS
ON PUBLISHERS.pub_id = TITLES.pub_id

SELECT T1.title_id,T1.title,T1.price,T1.ytd_sales
FROM TITLES T1 JOIN TITLES T2
ON T1.advance = T2.ytd_sales

SELECT * FROM TITLES

SELECT * FROM SALES

SELECT TITLES.title_id,title,price,
stor_id,ord_num,ord_Date,qty
FROM TITLES JOIN SALES
ON TITLES.title_id = SALES.title_id AND
TITLES.ytd_sales = SALES.qty

SELECT * FROM AUTHORS

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT AUTHORS.au_id,AU_LNAME,AU_FNAME,
TITLES.title_id,title,price,
au_ord,royaltyper
FROM AUTHORS JOIN TITLEAUTHOR
ON AUTHORS.au_id = TITLEAUTHOR.au_id
JOIN TITLES
ON TITLES.title_id = TITLEAUTHOR.title_id

SELECT title_id,title,price,
PUBLISHERS.pub_id,pub_name,city 
FROM TITLES ,PUBLISHERS

SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT pub_id,pub_name,city
FROM PUBLISHERS
WHERE pub_id IN (SELECT pub_id FROM TITLES)

SELECT pub_id,pub_name,city
FROM PUBLISHERS
WHERE pub_id NOT IN (SELECT pub_id FROM TITLES)

SELECT * FROM TITLES

SELECT * FROM SALES

SELECT T.title_id,T.title,T.ytd_sales
FROM TITLES T
WHERE T.ytd_sales = (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
SELECT T.title_id,T.title,T.ytd_sales
FROM TITLES T
WHERE T.ytd_sales < (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
SELECT T.title_id,T.title,T.ytd_sales
FROM TITLES T
WHERE T.ytd_sales > (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
				
SELECT * FROM TITLES

SELECT * FROM PUBLISHERS

SELECT * FROM SALES
					
SELECT T.title_id,T.title,T.ytd_sales,
P.PUB_ID,P.PUB_NAME,P.CITY
FROM TITLES T JOIN PUBLISHERS P
ON T.PUB_ID = P.PUB_ID
WHERE T.ytd_sales > (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')

SELECT * FROM TITLES	
				
SELECT * INTO MY_TITLE
FROM TITLES

SELECT * FROM MY_TITLE

DELETE MY_TITLE

INSERT INTO MY_TITLE
SELECT T.title_id,title,type,pub_id,price,advance ,
royalty,ytd_sales,notes,pubdate
FROM titles T JOIN sales S  
on T.title_id = S.title_id
WHERE T.ytd_sales > (SELECT SUM(qty) FROM sales
					WHERE title_id = 'BU1032')
					
--02/06/2015--

SELECT * FROM TITLES

SELECT * FROM SALES
					
UPDATE TITLES
SET PRICE = PRICE + (PRICE*1/100)
WHERE title_id IN(SELECT title_id from sales where qty > 10)

DELETE TITLES
WHERE title_id 
IN (SELECT title_id from sales where qty < 5)

SELECT * FROM TITLES

SELECT * FROM TITLEAUTHOR

SELECT * FROM AUTHORS

--  NESTED SUB QUERY
					
SELECT TITLE_ID,TITLE,PRICE
FROM TITLES
WHERE TITLE_ID IN
 (SELECT TITLE_ID FROM TITLEAUTHOR 
  WHERE au_id IN
  (SELECT au_id FROM AUTHORS 
   WHERE au_lname = 'White' AND au_fname = 'Johnson')) 
   
SELECT * FROM TITLES

SELECT * FROM SALES

-- Corelated subquery 
  
SELECT TITLE_ID,TITLE,PRICE,ytd_sales
FROM TITLES TIT
WHERE ytd_sales >
 (SELECT SUM(qty) from sales SAL 
   WHERE TIT.TITLE_ID = SAL.TITLE_ID)
   
SELECT * FROM TITLES

SELECT ADVANCE FROM TITLES

SELECT AVG(ADVANCE) FROM TITLES

SELECT AVG(DISTINCT ADVANCE) FROM TITLES

SELECT CITY FROM AUTHORS

SELECT COUNT(CITY) FROM AUTHORS

SELECT COUNT(DISTINCT CITY) FROM AUTHORS

SELECT MAX(ADVANCE) FROM TITLES

SELECT MIN(YTD_SALES) FROM TITLES

SELECT SUM(ADVANCE) FROM TITLES

SELECT STDEV(YTD_SALES) FROM TITLES

SELECT STDEVP(YTD_SALES) FROM TITLES

SELECT VAR(YTD_SALES) FROM TITLES

SELECT VARP(YTD_SALES) FROM TITLES


SELECT DATEADD(dd,1000,getdate())

SELECT DATEADD(mm,1,PUBDATE) FROM TITLES

SELECT DAY(GETDATE())

SELECT MONTH(GETDATE())

SELECT YEAR(GETDATE())

SELECT ABS(-65)

SELECT ABS(65)

SELECT ACOS(-1.00)

SELECT ASIN(-1.00)

SELECT ATAN(-35.00)

SELECT ATN2(35.1,138)

SELECT CEILING(12.87)

SELECT COS(12.3)

SELECT COT(12.3)

SELECT DEGREES(12.3)

SELECT EXP(12.3)

SELECT FLOOR(12.87)

SELECT LOG(3.14)

SELECT PI()

SELECT POWER(2,5)

SELECT RADIANS(45)

SELECT RAND(5)

SELECT ROUND(568.247,2)

SELECT SIGN(200)

SELECT SIN(568.24)

SELECT SIN(568.24)



























































